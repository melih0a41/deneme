--[[
    Memory Protection Module
    Protects against memory manipulation and hook exploits
]]

function AntiExploit:DeployMemoryProtection()
    print("[Protection] Deploying Memory Shield...")
    
    -- Srlion's Hook Library kontrolü
    local has_srlion = false
    if SrlionsHookLibrary or (hook and hook.SrlionVersion) then
        has_srlion = true
        print("[Memory Shield] Detected Srlion's Hook Library, adjusting protection...")
    end
    
    -- Hook protection
    local protected_hooks = {"Think", "PlayerSay", "PlayerInitialSpawn"}
    local original_hook_add = hook.Add
    
    -- Eğer Srlion's Hook Library varsa, korumayı devre dışı bırak
    if not has_srlion then
        hook.Add = function(event, identifier, func)
            -- Nil kontrolü ekle
            if not identifier then
                return original_hook_add(event, identifier, func)
            end
            
            -- identifier'ın string olduğundan emin ol
            identifier = tostring(identifier)
            
            -- WHITELIST - Bu identifier'ları ASLA engelleme
            -- WHITELIST - Bu identifier'ları ASLA engelleme
            local whitelist_identifiers = {
                -- Casino ve NPC
                "pcasino", "pCasino", "casino", "Casino",
                "npc", "NPC", "croupier", "dealer",
                -- Hands ve weapon sistemleri - GENİŞLETİLDİ
                "gmod_hands", "hands", "weapon", "deploy",
                "viewmodel", "CalcView", "CalcViewModelView",
                "PostDrawViewModel", "PreDrawViewModel",
                "ShouldDrawLocalPlayer", "DrawHands",
                "PreDrawPlayerHands", "PostDrawPlayerHands",
                "PlayerBindPress", "CreateMove", "SetupMove",
                "FinishMove", "StartCommand", "GetHands",
                "SetHands", "AttachToViewmodel", "vm_",
                -- DarkRP
                "DarkRP", "darkrp", "HUDPaint", "HUDShouldDraw",
                -- Garry's Mod core
                "GM:", "GAMEMODE:", "Entity:", "Player:",
                -- Diğer önemli sistemler
                "PlayerSpawn", "PlayerDeath", "PlayerHurt",
                "OnPlayerChangedTeam", "PlayerLoadout",
                "PlayerSwitchWeapon", "WeaponEquip",
                -- OpenPermissions
                "OpenPermissions", "openpermissions", "OP_"
            }
            
            -- Whitelist kontrolü
            for _, protected in ipairs(whitelist_identifiers) do
                if string.find(identifier:lower(), protected:lower()) then
                    return original_hook_add(event, identifier, func)
                end
            end
            
            -- Source kontrolü - gamemode ve entity dosyaları güvenli
            local info = debug.getinfo(2, "S")
            if info and info.source then
                -- İzin verilen dosya yolları
                local allowed_paths = {
                    "gamemodes/", "entities/", "weapons/",
                    "autorun/", "matproxy/", "postprocess/",
                    "effects/", "vgui/", "skins/", "openpermissions/"
                }
                
                for _, path in ipairs(allowed_paths) do
                    if string.find(info.source, path) then
                        return original_hook_add(event, identifier, func)
                    end
                end
                
                -- Bilinen güvenli addonlar
                local safe_addons = {
                    "darkrpmodification", "ulib", "ulx", "fadmin",
                    "sam", "serverguard", "moderncardealer",
                    "xenin", "billy", "vrmod", "openpermissions"
                }
                
                for _, addon in ipairs(safe_addons) do
                    if string.find(info.source:lower(), addon) then
                        return original_hook_add(event, identifier, func)
                    end
                end
            end
            
            -- Normal anti-exploit kontrolü SADECE çok spesifik durumlar için
            if table.HasValue(protected_hooks, event) then
                if info and info.source == "@" then
                    print("[Memory Shield] Blocked suspicious hook: " .. event .. " - " .. identifier)
                    return false
                end
            end
            
            return original_hook_add(event, identifier, func)
        end
    end
    
    -- Timer protection - OpenPermissions için özel muamele
    local original_timer_create = timer.Create
    local timer_sources = {} -- Her source için timer sayısını takip et
    local timer_warnings = {} -- Her source için uyarı durumu
    
    timer.Create = function(identifier, delay, reps, func)
        if not identifier then
            return original_timer_create(identifier, delay, reps, func)
        end
        
        identifier = tostring(identifier)
        
        -- Timer whitelist
        local timer_whitelist = {
            "hands", "weapon", "viewmodel", "animation",
            "darkrp", "fadmin", "ulx", "casino",
            "npc", "draw", "render", "hud"
        }
        
        for _, pattern in ipairs(timer_whitelist) do
            if string.find(identifier:lower(), pattern:lower()) then
                return original_timer_create(identifier, delay, reps, func)
            end
        end
        
        -- Source bazlı kontrol
        local info = debug.getinfo(2, "S")
        local source = info and info.source or "unknown"
        
        -- OpenPermissions özel kontrolü
        if string.find(source, "openpermissions") then
            -- OpenPermissions için çok yüksek limit ve sessiz mod
            if not timer_sources[source] then
                timer_sources[source] = 0
            end
            
            timer_sources[source] = timer_sources[source] + 1
            
            -- İlk uyarıyı göster, sonra sessiz ol
            if timer_sources[source] == 200 and not timer_warnings[source] then
                print("[Memory Shield] OpenPermissions creating many timers (200+), allowing but monitoring...")
                timer_warnings[source] = true
            end
            
            -- OpenPermissions için 500 timer limitine kadar izin ver
            if timer_sources[source] <= 500 then
                return original_timer_create(identifier, delay, reps, func)
            else
                -- 500'den fazlaysa sessizce reddet (spam yapmadan)
                return
            end
        end
        
        -- Gamemode dosyaları her zaman güvenli
        if string.find(source, "gamemodes/") or string.find(source, "entities/") then
            return original_timer_create(identifier, delay, reps, func)
        end
        
        -- Normal addon'lar için standart limit
        if not self.timer_count then
            self.timer_count = {}
        end
        
        self.timer_count[source] = (self.timer_count[source] or 0) + 1
        
        -- Normal limitler
        if self.timer_count[source] > 100 then
            -- Sadece ilk kez uyar
            if self.timer_count[source] == 101 then
                print("[Memory Shield] Blocked timer bombing from: " .. source)
            end
            return
        end
        
        return original_timer_create(identifier, delay, reps, func)
    end
    
    print("[Protection] ✅ Memory Shield deployed" .. (has_srlion and " (Srlion compatibility mode)" or ""))
end