--[[
    Code Protection Module
    Protects against code injection and execution
]]

function AntiExploit:DeployCodeProtection()
    print("[Protection] Deploying Code Injection Shield...")
    
    -- Command protection
    if concommand then
        local original_add = concommand.Add
        concommand.Add = function(name, func, autocomplete, helptext, flags)
            local info = debug.getinfo(2, "S")
            
            if info and info.source == "@" then
                print("[Code Shield] Blocked suspicious command: " .. name)
                return
            end
            
            return original_add(name, func, autocomplete, helptext, flags)
        end
    end
    
    -- Additional protections for common exploit vectors
    local protected_functions = {
        "game.ConsoleCommand",
        "game.CleanUpMap",
        "ents.Create"
    }
    
    for _, func_path in ipairs(protected_functions) do
        local parts = string.Explode(".", func_path)
        local parent = _G
        
        for i = 1, #parts - 1 do
            parent = parent[parts[i]]
            if not parent then break end
        end
        
        if parent and parent[parts[#parts]] then
            local original = parent[parts[#parts]]
            parent[parts[#parts]] = function(...)
                -- Validate caller
                local info = debug.getinfo(2, "S")
                if info and info.source == "@" then
                    print("[Code Shield] Blocked suspicious call to " .. func_path)
                    return
                end
                return original(...)
            end
        end
    end
    
    print("[Protection] âœ… Code Injection Shield deployed")
end