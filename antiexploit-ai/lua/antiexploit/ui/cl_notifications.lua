--[[
    Client-side Notifications
    Shows threat notifications to admins
]]

-- Notification system
local notifications = {}
local max_notifications = 5

-- Colors
local color_background = Color(30, 30, 30, 240)
local color_border = Color(255, 255, 255, 50)
local color_text = Color(255, 255, 255, 255)
local color_critical = Color(255, 50, 50)
local color_high = Color(255, 150, 50)
local color_medium = Color(255, 255, 50)
local color_low = Color(50, 255, 50)

-- Add notification
local function AddNotification(data)
    table.insert(notifications, 1, {
        text = data.text,
        threat_level = data.threat_level,
        time = CurTime(),
        duration = data.duration or 5
    })
    
    -- Limit notifications
    if #notifications > max_notifications then
        table.remove(notifications, #notifications)
    end
    
    -- Play sound
    if data.threat_level == "CRITICAL" then
        surface.PlaySound("buttons/button10.wav")
    else
        surface.PlaySound("buttons/button14.wav")
    end
end

-- Draw notifications
hook.Add("HUDPaint", "AntiExploit_Notifications", function()
    if not LocalPlayer():IsAdmin() then return end
    
    local x = ScrW() - 320
    local y = 100
    local w = 300
    local h = 60
    
    for i, notif in ipairs(notifications) do
        local alpha = 255
        local time_left = notif.duration - (CurTime() - notif.time)
        
        -- Fade out
        if time_left < 1 then
            alpha = time_left * 255
        end
        
        -- Background
        draw.RoundedBox(8, x, y, w, h, Color(color_background.r, color_background.g, color_background.b, alpha * 0.9))
        
        -- Border
        local border_color = color_border
        if notif.threat_level == "CRITICAL" then
            border_color = color_critical
        elseif notif.threat_level == "HIGH" then
            border_color = color_high
        elseif notif.threat_level == "MEDIUM" then
            border_color = color_medium
        else
            border_color = color_low
        end
        
        surface.SetDrawColor(border_color.r, border_color.g, border_color.b, alpha)
        surface.DrawOutlinedRect(x, y, w, h, 2)
        
        -- Icon
        surface.SetMaterial(Material("icon16/shield.png"))
        surface.SetDrawColor(255, 255, 255, alpha)
        surface.DrawTexturedRect(x + 10, y + 18, 24, 24)
        
        -- Text
        draw.SimpleText("AI Anti-Exploit", "DermaDefaultBold", x + 45, y + 10, Color(255, 255, 255, alpha))
        draw.SimpleText(notif.text, "DermaDefault", x + 45, y + 30, Color(255, 255, 255, alpha))
        
        y = y + h + 10
        
        -- Remove expired
        if time_left <= 0 then
            table.remove(notifications, i)
        end
    end
end)

-- Network receiver
net.Receive("AntiExploit_Notification", function()
    local data = net.ReadTable()
    
    if LocalPlayer():IsAdmin() then
        AddNotification(data)
    end
end)

-- Quick threat display
hook.Add("HUDPaint", "AntiExploit_ThreatLevel", function()
    if not LocalPlayer():IsAdmin() then return end
    
    -- Threat level indicator
    local threat_level = "LOW" -- This would be updated from server
    local color = color_low
    
    if threat_level == "CRITICAL" then
        color = color_critical
    elseif threat_level == "HIGH" then
        color = color_high
    elseif threat_level == "MEDIUM" then
        color = color_medium
    end
    
    -- Draw in top-right corner
    draw.RoundedBox(4, ScrW() - 150, 10, 140, 30, color_background)
    draw.SimpleText("Threat: " .. threat_level, "DermaDefaultBold", ScrW() - 80, 25, color, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
end)

-- Console notification
net.Receive("AntiExploit_ConsoleMsg", function()
    local msg = net.ReadString()
    local color = net.ReadColor()
    
    if LocalPlayer():IsAdmin() then
        MsgC(color, "[AI Anti-Exploit] ", Color(255, 255, 255), msg, "\n")
    end
end)