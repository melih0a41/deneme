-- Font System Restore
-- Anti-exploit sisteminden önce yüklenmesi için dosya adı alfabetik olarak önce

-- Orijinal fonksiyonları sakla
local original_CreateFont = surface.CreateFont
local original_SetFont = surface.SetFont
local original_GetTextSize = surface.GetTextSize

-- Font cache
local font_registry = {}
local default_fonts = {
    ["DermaDefault"] = {
        font = "Tahoma",
        size = 13,
        weight = 500
    },
    ["DermaDefaultBold"] = {
        font = "Tahoma", 
        size = 13,
        weight = 800
    },
    ["DermaLarge"] = {
        font = "Tahoma",
        size = 18,
        weight = 500
    }
}

-- Font oluşturmayı koru
surface.CreateFont = function(fontName, fontData)
    if not fontName or not fontData then return end
    
    -- Font verilerini kaydet
    font_registry[fontName] = table.Copy(fontData)
    
    -- Size'ı kontrol et ve düzelt
    if fontData.size and tonumber(fontData.size) then
        -- Font boyutlarını koru
        fontData.size = math.max(1, tonumber(fontData.size))
    end
    
    -- Weight'i kontrol et
    if fontData.weight and tonumber(fontData.weight) then
        fontData.weight = math.Clamp(tonumber(fontData.weight), 100, 1000)
    end
    
    -- Orijinal fonksiyonu çağır
    return original_CreateFont(fontName, fontData)
end

-- Font sistemini onar
local function RepairFontSystem()
    -- Varsayılan fontları yeniden oluştur
    for name, data in pairs(default_fonts) do
        surface.CreateFont(name, data)
    end
    
    -- Kayıtlı fontları yeniden oluştur
    for name, data in pairs(font_registry) do
        if data and data.size then
            original_CreateFont(name, data)
        end
    end
end

-- Font boyutlarını düzelt
hook.Add("InitPostEntity", "RepairFonts", function()
    timer.Simple(0.1, function()
        RepairFontSystem()
    end)
end)

-- Render scale'i kontrol et
hook.Add("OnScreenSizeChanged", "FixFontScale", function()
    RepairFontSystem()
end)

-- Font koruma
local protected_fonts = {}
surface.SetFont = function(fontName)
    if not fontName then
        fontName = "DermaDefault"
    end
    
    -- Font var mı kontrol et
    if not font_registry[fontName] and not default_fonts[fontName] then
        -- Alternatif font kullan
        fontName = "DermaDefault"
    end
    
    return original_SetFont(fontName)
end

-- Anti-exploit müdahalesini engelle
hook.Add("Initialize", "ProtectFontSystem", function()
    -- Font fonksiyonlarını koru
    local meta = debug.getmetatable(surface)
    if meta then
        meta.__newindex = function(t, k, v)
            if k == "CreateFont" or k == "SetFont" then
                print("[Font Protection] Blocked attempt to override " .. k)
                return
            end
            rawset(t, k, v)
        end
    end
end)

print("[Font System] Protection loaded")